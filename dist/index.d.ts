import 'dotenv/config';
declare const _default: {
    strategies: {
        'minime-balance-vs-supply-weighted': typeof import("./strategies/minime-balance-vs-supply-weighted");
        'cap-voting-power': typeof import("./strategies/cap-voting-power");
        'izumi-veizi': typeof import("./strategies/izumi-veizi");
        'eco-voting-power': typeof import("./strategies/eco-voting-power");
        'forta-shares': typeof import("./strategies/forta-shares");
        'across-staked-acx': typeof import("./strategies/across-staked-acx");
        'ethermon-erc721': typeof import("./strategies/ethermon-erc721");
        'etherorcs-combo-balanceof': typeof import("./strategies/etherorcs-combo-balanceof");
        'recusal-list': typeof import("./strategies/recusal-list");
        'landdao-token-tiers': typeof import("./strategies/landdao-token-tiers");
        'giveth-balancer-balance': typeof import("./strategies/giveth-balancer-balance");
        'giveth-gnosis-balance-v2': typeof import("./strategies/giveth-gnosis-balance-v2");
        'nouns-rfp-power': typeof import("./strategies/nouns-rfp-power");
        'anti-whale': typeof import("./strategies/anti-whale");
        balancer: typeof import("./strategies/balancer");
        'balancer-smart-pool': typeof import("./strategies/balancer-smart-pool");
        'lit-dao-governance': typeof import("./strategies/lit-dao-governance");
        'balance-in-vdfyn-vault': typeof import("./strategies/balance-in-vdfyn-vault");
        'erc20-received': typeof import("./strategies/erc20-received");
        'contract-call': typeof import("./strategies/contract-call");
        defiplaza: typeof import("./strategies/defiplaza");
        'dfyn-staked-in-farms': typeof import("./strategies/dfyn-staked-in-farms");
        'dfyn-staked-in-vaults': typeof import("./strategies/dfyn-staked-in-vaults");
        'dps-nft-strategy': typeof import("./strategies/dps-nft-strategy");
        'dps-nft-strategy-nova': typeof import("./strategies/dps-nft-strategy-nova");
        'ens-domains-owned': typeof import("./strategies/ens-domains-owned");
        'ens-reverse-record': typeof import("./strategies/ens-reverse-record");
        'ens-10k-club': typeof import("./strategies/ens-10k-club");
        'ens-all-club-digits': typeof import("./strategies/ens-all-club-digits");
        'governor-delegator': typeof import("./strategies/governor-delegator");
        'erc20-balance-of': typeof import("./strategies/erc20-balance-of");
        'erc20-balance-of-at': typeof import("./strategies/erc20-balance-of-at");
        'erc20-votes': typeof import("./strategies/erc20-votes");
        'erc20-votes-with-override': typeof import("./strategies/erc20-votes-with-override");
        'erc721-multi-registry-weighted': typeof import("./strategies/erc721-multi-registry-weighted");
        'erc20-balance-of-fixed-total': typeof import("./strategies/erc20-balance-of-fixed-total");
        'erc20-balance-of-cv': typeof import("./strategies/erc20-balance-of-cv");
        'erc20-balance-of-coeff': typeof import("./strategies/erc20-balance-of-coeff");
        'erc20-with-balance': typeof import("./strategies/erc20-with-balance");
        'erc20-balance-of-delegation': typeof import("./strategies/erc20-balance-of-delegation");
        'erc20-balance-of-with-delegation': typeof import("./strategies/erc20-balance-of-with-delegation");
        'erc20-balance-of-quadratic-delegation': typeof import("./strategies/erc20-balance-of-quadratic-delegation");
        'erc20-balance-of-top-holders': typeof import("./strategies/erc20-balance-of-top-holders");
        'erc20-balance-of-weighted': typeof import("./strategies/erc20-balance-of-weighted");
        'erc20-balance-of-indexed': typeof import("./strategies/erc20-balance-of-indexed");
        'erc20-price': typeof import("./strategies/erc20-price");
        'ethalend-balance-of': typeof import("./strategies/ethalend-balance-of");
        'balance-of-with-min': typeof import("./strategies/balance-of-with-min");
        'balance-of-with-thresholds': typeof import("./strategies/balance-of-with-thresholds");
        thresholds: typeof import("./strategies/thresholds");
        'eth-balance': typeof import("./strategies/eth-balance");
        'eth-with-balance': typeof import("./strategies/eth-with-balance");
        'eth-wallet-age': typeof import("./strategies/eth-wallet-age");
        'maker-ds-chief': typeof import("./strategies/maker-ds-chief");
        erc721: typeof import("./strategies/erc721");
        'erc721-enumerable': typeof import("./strategies/erc721-enumerable");
        'erc721-with-multiplier': typeof import("./strategies/erc721-with-multiplier");
        'erc721-with-tokenid': typeof import("./strategies/erc721-with-tokenid");
        'erc721-with-tokenid-range-weights': typeof import("./strategies/erc721-with-tokenid-range-weights");
        'erc721-with-tokenid-range-weights-simple': typeof import("./strategies/erc721-with-tokenid-range-weights-simple");
        'erc721-with-tokenid-weighted': typeof import("./strategies/erc721-with-tokenid-weighted");
        'erc721-with-metadata': typeof import("./strategies/erc721-with-metadata");
        'erc721-with-metadata-by-ownerof': typeof import("./strategies/erc721-with-metadata-by-ownerof");
        'erc721-multi-registry': typeof import("./strategies/erc721-multi-registry");
        'erc1155-balance-of': typeof import("./strategies/erc1155-balance-of");
        'erc1155-balance-of-cv': typeof import("./strategies/erc1155-balance-of-cv");
        'prepo-vesting': typeof import("./strategies/prepo-vesting");
        multichain: typeof import("./strategies/multichain");
        'gooddollar-multichain': typeof import("./strategies/gooddollar-multichain");
        uni: typeof import("./strategies/uni");
        'frax-finance': typeof import("./strategies/frax-finance");
        'yearn-vault': typeof import("./strategies/yearn-vault");
        moloch: typeof import("./strategies/moloch");
        masterchef: typeof import("./strategies/masterchef");
        sushiswap: typeof import("./strategies/sushiswap");
        uniswap: typeof import("./strategies/uniswap");
        'faraland-staking': typeof import("./strategies/faraland-staking");
        flashstake: typeof import("./strategies/flashstake");
        pancake: typeof import("./strategies/pancake");
        'pancake-profile': typeof import("./strategies/pancake-profile");
        synthetix: typeof import("./strategies/synthetix");
        'aelin-council': typeof import("./strategies/aelin-council");
        ctoken: typeof import("./strategies/ctoken");
        'staked-uniswap': typeof import("./strategies/staked-uniswap");
        'xdai-easy-staking': typeof import("./strategies/xdai-easy-staking");
        'xdai-posdao-staking': typeof import("./strategies/xdai-posdao-staking");
        'xdai-stake-holders': typeof import("./strategies/xdai-stake-holders");
        'xdai-stake-delegation': typeof import("./strategies/xdai-stake-delegation");
        defidollar: typeof import("./strategies/defidollar");
        aavegotchi: typeof import("./strategies/aavegotchi");
        'aavegotchi-agip': typeof import("./strategies/aavegotchi-agip");
        mithcash: typeof import("./strategies/mithcash");
        stablexswap: typeof import("./strategies/stablexswap");
        dittomoney: typeof import("./strategies/dittomoney");
        'staked-keep': typeof import("./strategies/staked-keep");
        'staked-daomaker': typeof import("./strategies/staked-daomaker");
        'balancer-unipool': typeof import("./strategies/balancer-unipool");
        typhoon: typeof import("./strategies/typhoon");
        delegation: typeof import("./strategies/delegation");
        'delegation-with-cap': typeof import("./strategies/delegation-with-cap");
        'delegation-with-overrides': typeof import("./strategies/delegation-with-overrides");
        'with-delegation': typeof import("./strategies/with-delegation");
        ticket: typeof import("./strategies/ticket");
        work: typeof import("./strategies/work");
        'ticket-validity': typeof import("./strategies/ticket-validity");
        validation: typeof import("./strategies/validation");
        opium: typeof import("./strategies/opium");
        'ocean-marketplace': typeof import("./strategies/ocean-marketplace");
        'the-graph-balance': typeof import("./strategies/the-graph-balance");
        'the-graph-delegation': typeof import("./strategies/the-graph-delegation");
        'the-graph-indexing': typeof import("./strategies/the-graph-indexing");
        whitelist: typeof import("./strategies/whitelist");
        'whitelist-weighted': typeof import("./strategies/whitelist-weighted");
        tokenlon: typeof import("./strategies/tokenlon");
        'pob-hash': typeof import("./strategies/pob-hash");
        'comp-like-votes': typeof import("./strategies/comp-like-votes");
        'governor-alpha': typeof import("./strategies/governor-alpha");
        pagination: typeof import("./strategies/pagination");
        'ruler-staked-lp': typeof import("./strategies/ruler-staked-lp");
        xcover: typeof import("./strategies/xcover");
        'niu-staked': typeof import("./strategies/niu-staked");
        mushrooms: typeof import("./strategies/mushrooms");
        'curio-cards-erc20-weighted': typeof import("./strategies/curio-cards-erc20-weighted");
        'ren-nodes': typeof import("./strategies/ren-nodes");
        'reverse-voting-escrow': typeof import("./strategies/reverse-voting-escrow");
        'multisig-owners': typeof import("./strategies/multisig-owners");
        'tranche-staking': typeof import("./strategies/tranche-staking");
        pepemon: typeof import("./strategies/pepemon");
        'erc1155-all-balances-of': typeof import("./strategies/erc1155-all-balances-of");
        'erc1155-with-multiplier': typeof import("./strategies/erc1155-with-multiplier");
        'saffron-finance': typeof import("./strategies/saffron-finance");
        'saffron-finance-v2': typeof import("./strategies/saffron-finance-v2");
        'tranche-staking-lp': typeof import("./strategies/tranche-staking-lp");
        'masterchef-pool-balance': typeof import("./strategies/masterchef-pool-balance");
        'masterchef-pool-balance-price': typeof import("./strategies/masterchef-pool-balance-price");
        api: typeof import("./strategies/api");
        'api-post': typeof import("./strategies/api-post");
        'api-v2': typeof import("./strategies/api-v2");
        'api-v2-override': {
            strategy(space: any, network: any, provider: any, addresses: any, options: any, snapshot: any): Promise<{
                [k: string]: any;
            }>;
            author: "snapshot-labs";
            version: "0.1.0";
        };
        xseen: typeof import("./strategies/xseen");
        'moloch-all': typeof import("./strategies/moloch-all");
        'moloch-loot': typeof import("./strategies/moloch-loot");
        'hopr-uni-lp-farm': typeof import("./strategies/hopr-uni-lp-farm");
        apescape: typeof import("./strategies/apescape");
        liftkitchen: typeof import("./strategies/liftkitchen");
        'decentraland-estate-size': typeof import("./strategies/decentraland-estate-size");
        'decentraland-wearable-rarity': typeof import("./strategies/decentraland-wearable-rarity");
        'decentraland-rental-lessors': typeof import("./strategies/decentraland-rental-lessors");
        brightid: typeof import("./strategies/brightid");
        'inverse-xinv': typeof import("./strategies/inverse-xinv");
        modefi: typeof import("./strategies/modefi");
        'iotex-staked-balance': typeof import("./strategies/iotex-staked-balance");
        'xrc20-balance-of': typeof import("./strategies/xrc20-balance-of");
        spookyswap: typeof import("./strategies/spookyswap");
        glide: typeof import("./strategies/glide");
        'rnbw-balance': typeof import("./strategies/rnbw-balance");
        'celer-sgn-delegation': typeof import("./strategies/celer-sgn-delegation");
        'infinityprotocol-liquidity-pools': typeof import("./strategies/infinityprotocol-liquidity-pools");
        'aave-governance-power': typeof import("./strategies/aave-governance-power");
        cake: typeof import("./strategies/cake");
        aks: typeof import("./strategies/aks");
        ogn: typeof import("./strategies/ogn");
        oolongswap: typeof import("./strategies/oolongswap");
        'impossible-finance': typeof import("./strategies/impossible-finance");
        'immutable-x': typeof import("./strategies/immutable-x");
        'zrx-voting-power': typeof import("./strategies/zrx-voting-power");
        'tomb-finance': typeof import("./strategies/tomb-finance");
        'tranche-staking-slice': typeof import("./strategies/tranche-staking-slice");
        'unipool-univ2-lp': typeof import("./strategies/unipool-univ2-lp");
        'unipool-xsushi': typeof import("./strategies/unipool-xsushi");
        'taraxa-delegation': typeof import("./strategies/taraxa-delegation");
        poap: typeof import("./strategies/poap");
        'poap-with-weight': typeof import("./strategies/poap-with-weight");
        'poap-with-weight-v2': typeof import("./strategies/poap-with-weight-v2");
        'uniswap-v3': typeof import("./strategies/uniswap-v3");
        'uniswap-v3-staking': typeof import("./strategies/uniswap-v3-staking");
        'l2-deversifi': typeof import("./strategies/l2-deversifi");
        'vested-deversifi': typeof import("./strategies/vested-deversifi");
        biswap: typeof import("./strategies/biswap");
        honeyswap: typeof import("./strategies/honeyswap");
        'egl-vote': typeof import("./strategies/egl-vote");
        'mcn-farm': typeof import("./strategies/mcn-farm");
        meebitsdao: typeof import("./strategies/meebitsdao");
        'crucible-erc20-balance-of': typeof import("./strategies/crucible-erc20-balance-of");
        'erc20-token-and-lp-weighted': typeof import("./strategies/erc20-token-and-lp-weighted");
        'erc20-token-and-single-lp-weighted': typeof import("./strategies/erc20-token-and-single-lp-weighted");
        'crucible-erc20-token-and-lp-weighted': typeof import("./strategies/crucible-erc20-token-and-lp-weighted");
        'has-rock': typeof import("./strategies/has-rock");
        'flexa-capacity-staking': typeof import("./strategies/flexa-capacity-staking");
        'sunrisegaming-univ2-lp': typeof import("./strategies/sunrisegaming-univ2-lp");
        'sunrisegaming-staking': typeof import("./strategies/sunrisegaming-staking");
        'single-staking-autocompound-balanceof': typeof import("./strategies/single-staking-autocompound-balanceof");
        'single-staking-pools-balanceof': typeof import("./strategies/single-staking-pools-balanceof");
        'hopr-stake-and-balance-qv': typeof import("./strategies/hopr-stake-and-balance-qv");
        'hopr-bridged-balance': typeof import("./strategies/hopr-bridged-balance");
        'occ-stake-of': typeof import("./strategies/occ-stake-of");
        'holds-tokens': typeof import("./strategies/holds-tokens");
        'loot-character-guilds': typeof import("./strategies/loot-character-guilds");
        'comp-like-votes-inclusive': typeof import("./strategies/comp-like-votes-inclusive");
        mstable: typeof import("./strategies/mstable");
        'hashes-voting': typeof import("./strategies/hashes-voting");
        'hashflow-vehft': typeof import("./strategies/hashflow-vehft");
        'aavegotchi-wagmi-guild': typeof import("./strategies/aavegotchi-wagmi-guild");
        'polis-balance': typeof import("./strategies/polis-balance");
        'mutant-cats-stakers-and-holders': typeof import("./strategies/mutant-cats-stakers-and-holders");
        'razor-network-voting': typeof import("./strategies/razor-network-voting");
        'mcb-balance-from-graph': typeof import("./strategies/mcb-balance-from-graph");
        'digitalax-genesis-contribution': typeof import("./strategies/digitalax-genesis-contribution");
        'digitalax-lp-stakers': typeof import("./strategies/digitalax-lp-stakers");
        'digitalax-mona-stakers-matic': typeof import("./strategies/digitalax-mona-stakers-matic");
        'digitalax-lp-stakers-matic': typeof import("./strategies/digitalax-lp-stakers-matic");
        'colony-reputation': typeof import("./strategies/colony-reputation");
        'digitalax-mona-quickswap': typeof import("./strategies/digitalax-mona-quickswap");
        'galaxy-nft-with-score': typeof import("./strategies/galaxy-nft-with-score");
        'galxe-loyalty-points': typeof import("./strategies/galxe-loyalty-points");
        'gatenet-total-staked': typeof import("./strategies/gatenet-total-staked");
        vesper: typeof import("./strategies/vesper");
        thales: typeof import("./strategies/thales");
        'tech-quadratic-ranked-choice': typeof import("./strategies/tech-quadratic-ranked-choice");
        'bsc-mvb': typeof import("./strategies/bsc-mvb");
        coinswap: typeof import("./strategies/coinswap");
        dgenesis: typeof import("./strategies/dgenesis");
        'vote-power-and-share': typeof import("./strategies/vote-power-and-share");
        math: typeof import("./strategies/math");
        'push-voting-power': typeof import("./strategies/push-voting-power");
        'staked-psp-balance': typeof import("./strategies/staked-psp-balance");
        'erc20-balance-of-contract-multiplier': typeof import("./strategies/erc20-balance-of-contract-multiplier");
        juicebox: typeof import("./strategies/juicebox");
        'snet-farmers': typeof import("./strategies/snet-farmers");
        'snet-stakers': typeof import("./strategies/snet-stakers");
        'snet-liquidity-providers': typeof import("./strategies/snet-liquidity-providers");
        'unstackedtoadz-and-stackedtoadz-stakers': typeof import("./strategies/unstackedtoadz-and-stackedtoadz-stakers");
        'ocean-dao-brightid': typeof import("./strategies/ocean-dao-brightid");
        membership: typeof import("./strategies/membership");
        'lydia-gov-vault': typeof import("./strategies/lydia-gov-vault");
        'darkforest-score': typeof import("./strategies/darkforest-score");
        'orange-reputation-based-voting': typeof import("./strategies/orange-reputation-based-voting");
        'orange-reputation-nft-based-voting': typeof import("./strategies/orange-reputation-nft-based-voting");
        'squid-dao': typeof import("./strategies/squid-dao");
        'botto-dao': typeof import("./strategies/botto-dao");
        genart: typeof import("./strategies/genart");
        'path-balance-staked-and-locked': typeof import("./strategies/path-balance-staked-and-locked");
        'balancer-poolid': typeof import("./strategies/balancer-poolid");
        'staked-balancer': typeof import("./strategies/staked-balancer");
        'staked-uniswap-modifiable': typeof import("./strategies/staked-uniswap-modifiable");
        'erc1155-balance-of-ids': typeof import("./strategies/erc1155-balance-of-ids");
        'erc1155-balance-of-ids-weighted': typeof import("./strategies/erc1155-balance-of-ids-weighted");
        'erc1155-weighted-by-id': typeof import("./strategies/erc1155-weighted-by-id");
        'stakers-and-holders': typeof import("./strategies/stakers-and-holders");
        'banksy-dao': typeof import("./strategies/banksy-dao");
        spacey2025: typeof import("./strategies/spacey2025");
        'spacefi-blp': typeof import("./strategies/spacefi-blp");
        'sandman-dao': typeof import("./strategies/sandman-dao");
        've-balance-of-at': typeof import("./strategies/ve-balance-of-at");
        've-ribbon': typeof import("./strategies/ve-ribbon");
        've-ribbon-voting-power': typeof import("./strategies/ve-ribbon-voting-power");
        chubbykaijudao: typeof import("./strategies/chubbykaijudao");
        revest: typeof import("./strategies/revest");
        'staking-claimed-unclaimed': typeof import("./strategies/staking-claimed-unclaimed");
        'gysr-staking-balance': typeof import("./strategies/gysr-staking-balance");
        'gysr-lp-staking-balance': typeof import("./strategies/gysr-lp-staking-balance");
        'wanakafarm-staking': typeof import("./strategies/wanakafarm-staking");
        starsharks: typeof import("./strategies/starsharks");
        'printer-financial': typeof import("./strategies/printer-financial");
        'ethercats-founders-series': typeof import("./strategies/ethercats-founders-series");
        potion: typeof import("./strategies/potion");
        'minotaur-money': typeof import("./strategies/minotaur-money");
        'conv-finance': typeof import("./strategies/conv-finance");
        'sd-boost': typeof import("./strategies/sd-boost");
        'wanakafarm-land-ingame': typeof import("./strategies/wanakafarm-land-ingame");
        'starcatchers-top-window': typeof import("./strategies/starcatchers-top-window");
        gno: typeof import("./strategies/gno");
        'gno-vote-weight': typeof import("./strategies/gno");
        'masterchef-pool-balance-no-rewarddebt': typeof import("./strategies/masterchef-pool-balance-no-rewarddebt");
        'proof-of-humanity': typeof import("./strategies/proof-of-humanity");
        'sybil-protection': typeof import("./strategies/sybil-protection");
        'samurailegends-generals-balance': typeof import("./strategies/samurailegends-generals-balance");
        'dogs-unchained': typeof import("./strategies/dogs-unchained");
        'umami-voting': typeof import("./strategies/umami-voting");
        'liquidity-token-provide': typeof import("./strategies/liquidity-token-provide");
        'gamium-voting': typeof import("./strategies/gamium-voting");
        'citydao-square-root': typeof import("./strategies/citydao-square-root");
        'rowdy-roos': typeof import("./strategies/rowdy-roos");
        hedgey: typeof import("./strategies/hedgey");
        'hedgey-delegate': typeof import("./strategies/hedgey-delegate");
        've-balance-of-at-nft': typeof import("./strategies/ve-balance-of-at-nft");
        'genzees-from-subgraph': typeof import("./strategies/genzees-from-subgraph");
        'position-governance-power': typeof import("./strategies/position-governance-power");
        'credit-lp': typeof import("./strategies/credit-lp");
        helix: typeof import("./strategies/helix");
        'aura-vault-balance-of-single-asset': typeof import("./strategies/aura-vault-balance-of-single-asset");
        'rocketpool-node-operator': typeof import("./strategies/rocketpool-node-operator");
        'rocketpool-node-operator-v2': typeof import("./strategies/rocketpool-node-operator-v2");
        'rocketpool-node-operator-v3': typeof import("./strategies/rocketpool-node-operator-v3");
        'earthfund-child-dao-staking-balance': typeof import("./strategies/earthfund-child-dao-staking-balance");
        'sd-boost-twavp': typeof import("./strategies/sd-boost-twavp");
        'unipilot-vault-pilot-balance': typeof import("./strategies/unipilot-vault-pilot-balance");
        'balance-of-with-linear-vesting-power': typeof import("./strategies/balance-of-with-linear-vesting-power");
        'linear-vesting-power': typeof import("./strategies/linear-vesting-power");
        'lrc-l2-subgraph-balance-of': typeof import("./strategies/lrc-l2-subgraph-balance-of");
        'lrc-l2-nft-balance-of': typeof import("./strategies/lrc-l2-nft-balance-of");
        'lrc-lp-subgraph-balance-of': typeof import("./strategies/lrc-lp-subgraph-balance-of");
        'lrc-nft-search-mult': typeof import("./strategies/lrc-nft-search-mult");
        'bancor-pool-token-underlying-balance': typeof import("./strategies/bancor-pool-token-underlying-balance");
        'balance-of-subgraph': typeof import("./strategies/balance-of-subgraph");
        'wagdie-subgraph': typeof import("./strategies/wagdie-subgraph");
        'erc721-pair-weights': typeof import("./strategies/erc721-pair-weights");
        'harmony-staking': typeof import("./strategies/harmony-staking");
        'erc3525-flexible-voucher': typeof import("./strategies/erc3525-flexible-voucher");
        'orca-pod': typeof import("./strategies/orca-pod");
        'metropolis-pod': typeof import("./strategies/metropolis-pod");
        'proxyprotocol-erc721-balance-of': typeof import("./strategies/proxyprotocol-erc721-balance-of");
        'posichain-staking': typeof import("./strategies/posichain-staking");
        'posichain-total-balance': typeof import("./strategies/posichain-total-balance");
        'arrow-vesting': typeof import("./strategies/arrow-vesting");
        'tutellus-protocol': typeof import("./strategies/tutellus-protocol");
        'fight-club': typeof import("./strategies/fight-club");
        'tpro-staking': typeof import("./strategies/tpro-staking");
        'safe-vested': typeof import("./strategies/safe-vested");
        'otterspace-badges': typeof import("./strategies/otterspace-badges");
        'synthetic-nouns-with-claimer': typeof import("./strategies/synthetic-nouns-with-claimer");
        'echelon-wallet-prime-and-cached-key': typeof import("./strategies/echelon-wallet-prime-and-cached-key");
        'nation3-votes-with-delegations': typeof import("./strategies/nation3-votes-with-delegations");
        'nation3-passport-coop-with-delegations': typeof import("./strategies/nation3-passport-coop-with-delegations");
        'erc20-tokens-per-uni': typeof import("./strategies/erc20-tokens-per-uni");
        'bancor-standard-rewards-underlying-balance': typeof import("./strategies/bancor-standard-rewards-underlying-balance");
        'sd-vote-boost': typeof import("./strategies/sd-vote-boost");
        'sd-vote-boost-twavp': typeof import("./strategies/sd-vote-boost-twavp");
        spreadsheet: typeof import("./strategies/spreadsheet");
        'offchain-delegation': typeof import("./strategies/offchain-delegation");
        'ninechronicles-staked-and-dcc': typeof import("./strategies/ninechronicles-staked-and-dcc");
        'rep3-badges': typeof import("./strategies/rep3-badges");
        marsecosystem: typeof import("./strategies/marsecosystem");
        'ari10-staking-locked': typeof import("./strategies/ari10-staking-locked");
        'skale-delegation-weighted': typeof import("./strategies/skale-delegation-weighted");
        reliquary: typeof import("./strategies/reliquary");
        'jpegd-locked-jpeg-of': typeof import("./strategies/jpegd-locked-jpeg-of");
        'lodestar-vesting': typeof import("./strategies/lodestar-vesting");
        'lodestar-staked-lp': typeof import("./strategies/lodestar-staked-lp");
        'battlefly-vgfly-and-staked-gfly': typeof import("./strategies/battlefly-vgfly-and-staked-gfly");
        'nexon-army-nft': typeof import("./strategies/nexon-army-nft");
        'moonbeam-free-balance': typeof import("./strategies/moonbeam-free-balance");
        'stakedotlink-vesting': typeof import("./strategies/stakedotlink-vesting");
        'psp-in-sepsp2-balance': typeof import("./strategies/psp-in-sepsp2-balance");
        'pdn-balances-and-vests': typeof import("./strategies/pdn-balances-and-vests");
        'lqty-proxy-stakers': typeof import("./strategies/lqty-proxy-stakers");
        'rdnt-capital-voting': typeof import("./strategies/rdnt-capital-voting");
        'staked-defi-balance': typeof import("./strategies/staked-defi-balance");
        'degenzoo-erc721-animals-weighted': typeof import("./strategies/degenzoo-erc721-animals-weighted");
        'zunami-pool-gauge-aggregated-balance-of': typeof import("./strategies/zunami-pool-gauge-aggregated-balance-of");
        'erc721-collateral-held': typeof import("./strategies/erc721-collateral-held");
        'starlay-ve-balance-of-locker-id': typeof import("./strategies/starlay-ve-balance-of-locker-id");
        'winr-staking': typeof import("./strategies/winr-staking");
        spaceid: typeof import("./strategies/spaceid");
        'delegate-registry-v2': typeof import("./strategies/delegate-registry-v2");
        'hats-protocol-single-vote-per-org': typeof import("./strategies/hats-protocol-single-vote-per-org");
        'karma-discord-roles': typeof import("./strategies/karma-discord-roles");
        'seedify-cumulative-voting-power-hodl-staking-farming': typeof import("./strategies/seedify-cumulative-voting-power-hodl-staking-farming");
        'staked-morekudasai': typeof import("./strategies/staked-morekudasai");
        'sablier-v1-deposit': typeof import("./strategies/sablier-v1-deposit");
        'sablier-v2': typeof import("./strategies/sablier-v2");
        'gelato-staking': typeof import("./strategies/gelato-staking");
        'erc4626-assets-of': typeof import("./strategies/erc4626-assets-of");
        'friend-tech': typeof import("./strategies/friend-tech");
        'sd-vote-boost-twavp-v2': typeof import("./strategies/sd-vote-boost-twavp-v2");
        'sd-vote-boost-twavp-v3': typeof import("./strategies/sd-vote-boost-twavp-v3");
        'sd-vote-boost-twavp-v4': typeof import("./strategies/sd-vote-boost-twavp-v4");
        'sd-vote-boost-twavp-vsdtoken': typeof import("./strategies/sd-vote-boost-twavp-vsdtoken");
        'sd-vote-boost-twavp-balanceof': typeof import("./strategies/sd-vote-boost-twavp-balanceof");
        moonbase: typeof import("./strategies/moonbase");
        'dss-vest-unpaid': typeof import("./strategies/dss-vest-unpaid");
        'dss-vest-balance-and-unpaid': typeof import("./strategies/dss-vest-balance-and-unpaid");
        'eoa-balance-and-staking-pools': typeof import("./strategies/eoa-balance-and-staking-pools");
        'station-score-if-badge': typeof import("./strategies/station-score-if-badge");
        'station-constant-if-badge': typeof import("./strategies/station-constant-if-badge");
        'mangrove-station-qv-scaled-to-mgv': typeof import("./strategies/mangrove-station-qv-scaled-to-mgv");
        floki: typeof import("./strategies/floki");
        'hats-protocol-hat-id': typeof import("./strategies/hats-protocol-hat-id");
        'hats-protocol-hat-ids': typeof import("./strategies/hats-protocol-hat-ids");
        'bubblegum-kids': typeof import("./strategies/bubblegum-kids");
        'clipper-staked-sail': typeof import("./strategies/clipper-staked-sail");
        plearn: typeof import("./strategies/plearn");
        snote: typeof import("./strategies/snote");
        streamr: typeof import("./strategies/streamr");
        'aavegotchi-agip-17': typeof import("./strategies/aavegotchi-agip-17");
        'aavegotchi-agip-37-gltr-staked-lp': typeof import("./strategies/aavegotchi-agip-37-gltr-staked-lp");
        'aavegotchi-agip-37-wap-ghst': typeof import("./strategies/aavegotchi-agip-37-wap-ghst");
        agave: typeof import("./strategies/agave");
        'arrakis-finance': typeof import("./strategies/arrakis-finance");
        'ctsi-staking-pool': typeof import("./strategies/ctsi-staking-pool");
        'cyberkongz-v2': typeof import("./strategies/cyberkongz-v2");
        'dextf-staked-in-vaults': typeof import("./strategies/dextf-staked-in-vaults");
        genomesdao: typeof import("./strategies/genomesdao");
        'goldfinch-membership': typeof import("./strategies/goldfinch-membership");
        'goldfinch-voting-power': typeof import("./strategies/goldfinch-voting-power");
        h2o: typeof import("./strategies/h2o");
        'hopr-staking-by-season': typeof import("./strategies/hopr-staking-by-season");
        'hopr-staking-s2': typeof import("./strategies/hopr-staking-s2");
        ilv: typeof import("./strategies/ilv");
        'meebitsdao-delegation': typeof import("./strategies/meebitsdao-delegation");
        'modefi-staking': typeof import("./strategies/modefi-staking");
        'orbs-network-delegation': typeof import("./strategies/orbs-network-delegation");
        'planet-finance-v2': typeof import("./strategies/planet-finance-v2");
        'rari-fuse': typeof import("./strategies/rari-fuse");
        'synthetix-non-quadratic_1': typeof import("./strategies/synthetix-non-quadratic_1");
        'synthetix-quadratic': typeof import("./strategies/synthetix-quadratic");
        'synthetix-quadratic_1': typeof import("./strategies/synthetix-quadratic_1");
        synthetix_1: typeof import("./strategies/synthetix_1");
        'total-axion-shares': typeof import("./strategies/total-axion-shares");
        'unipool-same-token': typeof import("./strategies/unipool-same-token");
        'vendor-v2-borrower-collateral-balance-of': typeof import("./strategies/vendor-v2-borrower-collateral-balance-of");
        'volt-voting-power': typeof import("./strategies/volt-voting-power");
        'xdai-stakers-and-holders': typeof import("./strategies/xdai-stakers-and-holders");
        'urbit-galaxies': typeof import("./strategies/urbit-galaxies");
        'vesting-balance-of': typeof import("./strategies/vesting-balance-of");
    };
    validations: {};
    utils: {
        getScoresDirect: typeof import("./utils").getScoresDirect;
        multicall: typeof import("@snapshot-labs/snapshot.js/dist/utils").multicall;
        Multicaller: typeof import("@snapshot-labs/snapshot.js/dist/utils/multicaller").default;
        subgraphRequest: typeof import("@snapshot-labs/snapshot.js/dist/utils").subgraphRequest;
        ipfsGet: typeof import("@snapshot-labs/snapshot.js/dist/utils").ipfsGet;
        call: typeof import("@snapshot-labs/snapshot.js/dist/utils").call;
        getDelegatesBySpace: typeof import("@snapshot-labs/snapshot.js/dist/utils").getDelegatesBySpace;
        getBlockNumber: typeof import("@snapshot-labs/snapshot.js/dist/utils/web3").getBlockNumber;
        getProvider: typeof import("@snapshot-labs/snapshot.js/dist/utils/provider").default;
        getDelegations: typeof import("./utils/delegation").getDelegations;
        getSnapshots: typeof import("@snapshot-labs/snapshot.js/dist/utils/blockfinder").getSnapshots;
        SNAPSHOT_SUBGRAPH_URL: {
            1: string;
            5: string;
            10: string;
            56: string;
            100: string;
            137: string;
            250: string;
            42161: string;
        };
        getVp: typeof import("./utils/vp").getVp;
        getCoreDelegations: typeof import("./utils/vp").getDelegations;
    };
};
export default _default;
